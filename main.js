!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(e=>{e.target.classList.toggle("cards__like-button_active"),console.log("liked")})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(e=>{e.target.closest(".card").remove()})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._setEventListeners(),this._cardElement.querySelector(".cards__image").src=this._link,this._cardElement.querySelector(".cards__image").alt=this._name,this._cardElement.querySelector(".cards__title").textContent=this._name,this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=e.validationMessage,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(e,t,s){if(this._hasInvalidInput(e))return t.classList.add(s),void(t.disabled=!0);t.classList.remove(s),t.disabled=!1}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls,this._submitButton,this._inactiveButtonClass)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(this._inputEls,this._submitButton,this._inactiveButtonClass),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._button=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscape)}close(){document.removeEventListener("keydown",this._handleEscape),this._popupElement.classList.remove("modal_opened")}_handleEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form")}_getInputValues(){this._inputList=this._popupForm.querySelectorAll(".modal__input");const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()})),super.setEventListeners()}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#profile-add-card"),c=i.querySelector("#edit-modal-form"),u=document.querySelector("#profile-title-input"),d=document.querySelector("#profile-description-input"),_=l.querySelector("#add-modal-form"),m=(document.querySelector(".cards__list"),"#card-template"),p=new n("#profile-edit-modal",(function(e){E.setUserInfo(e.title,e.description)}));p.setEventListeners();const h=new class extends s{constructor(e){super({popupSelector:e})}open(e,t){this._popupElement.querySelector(".modal__image").src=t,this._popupElement.querySelector(".modal__image").alt=e,this._popupElement.querySelector(".modal__image-text").textContent=e,super.open()}}("#preview-image-modal");h.setEventListeners();const E=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}}(".profile__title",".profile__description"),S=new class{constructor(e){let{items:t,renderer:s,cssSelector:n}=e;this._items=t,this._renderer=s,this._container=document.querySelector(n)}renderItems(){console.log("other"),this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:g,cssSelector:".cards__list"});S.renderItems();const v=new n("#profile-add-card",(function(e){console.log(e),g(e),_.reset()}));function f(e,t){h.open(e,t)}function g(t){const s=function(t){return new e(t,m,f).getView()}(t);S.addItem(s)}v.setEventListeners(),o.addEventListener("click",(()=>{const e=E.getUserInfo();u.value=e.name,d.value=e.job,p.open()})),a.addEventListener("click",(()=>{y.resetValidation(),v.open()})),new t(r,c).enableValidation();const y=new t(r,_);y.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,